Error posting to game_info/create: STATUS CODE 400
Response text: {"game_id":["game info with this game id already exists."]}
Error posting to pitcher_stats/create: STATUS CODE 500
Response text: <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ProgrammingError
          at /api/pitcher_stats/create/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size: 0.6875rem; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #info { padding: 0; }
    #info > * { padding:10px 20px; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size: 0.7rem; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5rem; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<header id="summary">
  <h1>ProgrammingError
       at /api/pitcher_stats/create/</h1>
  <pre class="exception_value">function sum(boolean) does not exist
LINE 1: SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, SUM(&quot;ap...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
</pre>
  <table class="meta">

    <tr>
      <th scope="row">Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th scope="row">Request URL:</th>
      <td>http://127.0.0.1:8000/api/pitcher_stats/create/</td>
    </tr>

    <tr>
      <th scope="row">Django Version:</th>
      <td>5.2.1</td>
    </tr>

    <tr>
      <th scope="row">Exception Type:</th>
      <td>ProgrammingError</td>
    </tr>


    <tr>
      <th scope="row">Exception Value:</th>
      <td><pre>function sum(boolean) does not exist
LINE 1: SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, SUM(&quot;ap...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
</pre></td>
    </tr>


    <tr>
      <th scope="row">Exception Location:</th>
      <td><span class="fname">/usr/local/lib/python3.13/site-packages/django/db/backends/utils.py</span>, line 105, in _execute</td>
    </tr>


    <tr>
      <th scope="row">Raised during:</th>
      <td>app.views.PitcherStatCreateView</td>
    </tr>

    <tr>
      <th scope="row">Python Executable:</th>
      <td>/usr/local/bin/python3</td>
    </tr>
    <tr>
      <th scope="row">Python Version:</th>
      <td>3.13.2</td>
    </tr>
    <tr>
      <th scope="row">Python Path:</th>
      <td><pre><code>[&#x27;/app&#x27;,
 &#x27;/usr/local/lib/python313.zip&#x27;,
 &#x27;/usr/local/lib/python3.13&#x27;,
 &#x27;/usr/local/lib/python3.13/lib-dynload&#x27;,
 &#x27;/usr/local/lib/python3.13/site-packages&#x27;]</code></pre></td>
    </tr>
    <tr>
      <th scope="row">Server time:</th>
      <td>Sun, 15 Jun 2025 21:12:09 +0000</td>
    </tr>
  </table>
</header>

<main id="info">




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" role="button" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/django/db/backends/utils.py</code>, line 105, in _execute
          

          
            <div class="context" id="c281473711575616">
              
                <ol start="98" class="pre-context" id="pre281473711575616">
                
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>        with self.db.wrap_database_errors:</pre></li>
                
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>            if params is None:</pre></li>
                
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>                # params default might be backend specific.</pre></li>
                
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>                return self.cursor.execute(sql)</pre></li>
                
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>            else:</pre></li>
                
                </ol>
              
              <ol start="105" class="context-line">
                <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>                return self.cursor.execute(sql, params)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='106' class="post-context" id="post281473711575616">
                  
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>    def _executemany(self, sql, param_list, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>        # Raise a warning during app initialization (stored_app_configs is only</pre></li>
                  
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>        # ever set during testing).</pre></li>
                  
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>        if not apps.ready and not apps.stored_app_configs:</pre></li>
                  
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711575616">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0xffffb4957410&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(202547, 10)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0xffffb4957410&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, &#x27;
 &#x27;SUM(&quot;app_pitcherstat&quot;.&quot;loss&quot;) AS &quot;total_losses&quot;, SUM(&quot;app_pitcherstat&quot;.&quot;sv&quot;) &#x27;
 &#x27;AS &quot;total_saves&quot; FROM &quot;app_pitcherstat&quot; WHERE &#x27;
 &#x27;(&quot;app_pitcherstat&quot;.&quot;game_id_id&quot; &lt;= %s AND &quot;app_pitcherstat&quot;.&quot;player_id_id&quot; = &#x27;
 &#x27;%s)&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
          <li class="cause"><h3>
          
            The above exception (function sum(boolean) does not exist
LINE 1: SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, SUM(&quot;ap...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
) was the direct cause of the following exception:
          
        </h3></li>
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c281473711217728">
              
                <ol start="48" class="pre-context" id="pre281473711217728">
                
                  <li onclick="toggle('pre281473711217728', 'post281473711217728')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711217728', 'post281473711217728')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre281473711217728', 'post281473711217728')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre281473711217728', 'post281473711217728')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711217728', 'post281473711217728')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre281473711217728', 'post281473711217728')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre281473711217728', 'post281473711217728')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre281473711217728', 'post281473711217728')"><pre>                response = get_response(request)
                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post281473711217728">
                  
                  <li onclick="toggle('pre281473711217728', 'post281473711217728')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre281473711217728', 'post281473711217728')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre281473711217728', 'post281473711217728')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre281473711217728', 'post281473711217728')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711217728', 'post281473711217728')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre281473711217728', 'post281473711217728')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711217728">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ProgrammingError(&#x27;function sum(boolean) does not exist\nLINE 1: SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, SUM(&quot;ap...\n               ^\nHINT:  No function matches the given name and argument types. You might need to add explicit type casts.\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0xffffb55c9d30&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/api/pitcher_stats/create/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c281473711212608">
              
                <ol start="190" class="pre-context" id="pre281473711212608">
                
                  <li onclick="toggle('pre281473711212608', 'post281473711212608')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711212608', 'post281473711212608')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre281473711212608', 'post281473711212608')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre281473711212608', 'post281473711212608')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre281473711212608', 'post281473711212608')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre281473711212608', 'post281473711212608')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre281473711212608', 'post281473711212608')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre281473711212608', 'post281473711212608')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post281473711212608">
                  
                  <li onclick="toggle('pre281473711212608', 'post281473711212608')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre281473711212608', 'post281473711212608')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre281473711212608', 'post281473711212608')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre281473711212608', 'post281473711212608')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre281473711212608', 'post281473711212608')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711212608', 'post281473711212608')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711212608">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0xffffb55a8540&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/api/pitcher_stats/create/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0xffffb55c9d30&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0xffffb55a8540&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/django/views/decorators/csrf.py</code>, line 65, in _view_wrapper
          

          
            <div class="context" id="c281473711213376">
              
                <ol start="58" class="pre-context" id="pre281473711213376">
                
                  <li onclick="toggle('pre281473711213376', 'post281473711213376')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711213376', 'post281473711213376')"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre281473711213376', 'post281473711213376')"><pre>            return await view_func(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre281473711213376', 'post281473711213376')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711213376', 'post281473711213376')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre281473711213376', 'post281473711213376')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711213376', 'post281473711213376')"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="65" class="context-line">
                <li onclick="toggle('pre281473711213376', 'post281473711213376')"><pre>            return view_func(request, *args, **kwargs)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='66' class="post-context" id="post281473711213376">
                  
                  <li onclick="toggle('pre281473711213376', 'post281473711213376')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711213376', 'post281473711213376')"><pre>    _view_wrapper.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre281473711213376', 'post281473711213376')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711213376', 'post281473711213376')"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711213376">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/api/pitcher_stats/create/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0xffffb55a84a0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/django/views/generic/base.py</code>, line 104, in view
          

          
            <div class="context" id="c281473722526080">
              
                <ol start="97" class="pre-context" id="pre281473722526080">
                
                  <li onclick="toggle('pre281473722526080', 'post281473722526080')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre281473722526080', 'post281473722526080')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre281473722526080', 'post281473722526080')"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>
                
                  <li onclick="toggle('pre281473722526080', 'post281473722526080')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre281473722526080', 'post281473722526080')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre281473722526080', 'post281473722526080')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre281473722526080', 'post281473722526080')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="104" class="context-line">
                <li onclick="toggle('pre281473722526080', 'post281473722526080')"><pre>            return self.dispatch(request, *args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='105' class="post-context" id="post281473722526080">
                  
                  <li onclick="toggle('pre281473722526080', 'post281473722526080')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473722526080', 'post281473722526080')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre281473722526080', 'post281473722526080')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre281473722526080', 'post281473722526080')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473722526080', 'post281473722526080')"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>
                  
                  <li onclick="toggle('pre281473722526080', 'post281473722526080')"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473722526080">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;app.views.PitcherStatCreateView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/api/pitcher_stats/create/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;app.views.PitcherStatCreateView object at 0xffffb4837650&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/rest_framework/views.py</code>, line 515, in dispatch
          

          
            <div class="context" id="c281473711210880">
              
                <ol start="508" class="pre-context" id="pre281473711210880">
                
                  <li onclick="toggle('pre281473711210880', 'post281473711210880')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre281473711210880', 'post281473711210880')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre281473711210880', 'post281473711210880')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre281473711210880', 'post281473711210880')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711210880', 'post281473711210880')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre281473711210880', 'post281473711210880')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711210880', 'post281473711210880')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="515" class="context-line">
                <li onclick="toggle('pre281473711210880', 'post281473711210880')"><pre>            response = self.handle_exception(exc)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='516' class="post-context" id="post281473711210880">
                  
                  <li onclick="toggle('pre281473711210880', 'post281473711210880')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711210880', 'post281473711210880')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre281473711210880', 'post281473711210880')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre281473711210880', 'post281473711210880')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711210880', 'post281473711210880')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre281473711210880', 'post281473711210880')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711210880">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method PitcherStatCreateView.post of &lt;app.views.PitcherStatCreateView object at 0xffffb4837650&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/api/pitcher_stats/create/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;app.views.PitcherStatCreateView object at 0xffffb4837650&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/rest_framework/views.py</code>, line 475, in handle_exception
          

          
            <div class="context" id="c281473711217664">
              
                <ol start="468" class="pre-context" id="pre281473711217664">
                
                  <li onclick="toggle('pre281473711217664', 'post281473711217664')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711217664', 'post281473711217664')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre281473711217664', 'post281473711217664')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711217664', 'post281473711217664')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre281473711217664', 'post281473711217664')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre281473711217664', 'post281473711217664')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711217664', 'post281473711217664')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="475" class="context-line">
                <li onclick="toggle('pre281473711217664', 'post281473711217664')"><pre>            self.raise_uncaught_exception(exc)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='476' class="post-context" id="post281473711217664">
                  
                  <li onclick="toggle('pre281473711217664', 'post281473711217664')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711217664', 'post281473711217664')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre281473711217664', 'post281473711217664')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre281473711217664', 'post281473711217664')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711217664', 'post281473711217664')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre281473711217664', 'post281473711217664')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711217664">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/api/pitcher_stats/create/&#x27;&gt;,
 &#x27;view&#x27;: &lt;app.views.PitcherStatCreateView object at 0xffffb4837650&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ProgrammingError(&#x27;function sum(boolean) does not exist\nLINE 1: SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, SUM(&quot;ap...\n               ^\nHINT:  No function matches the given name and argument types. You might need to add explicit type casts.\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0xffffb574ee80&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;app.views.PitcherStatCreateView object at 0xffffb4837650&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/rest_framework/views.py</code>, line 486, in raise_uncaught_exception
          

          
            <div class="context" id="c281473721348672">
              
                <ol start="479" class="pre-context" id="pre281473721348672">
                
                  <li onclick="toggle('pre281473721348672', 'post281473721348672')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473721348672', 'post281473721348672')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre281473721348672', 'post281473721348672')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre281473721348672', 'post281473721348672')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre281473721348672', 'post281473721348672')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre281473721348672', 'post281473721348672')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre281473721348672', 'post281473721348672')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="486" class="context-line">
                <li onclick="toggle('pre281473721348672', 'post281473721348672')"><pre>        raise exc
             ^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='487' class="post-context" id="post281473721348672">
                  
                  <li onclick="toggle('pre281473721348672', 'post281473721348672')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473721348672', 'post281473721348672')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre281473721348672', 'post281473721348672')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre281473721348672', 'post281473721348672')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre281473721348672', 'post281473721348672')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre281473721348672', 'post281473721348672')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473721348672">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ProgrammingError(&#x27;function sum(boolean) does not exist\nLINE 1: SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, SUM(&quot;ap...\n               ^\nHINT:  No function matches the given name and argument types. You might need to add explicit type casts.\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/api/pitcher_stats/create/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;app.views.PitcherStatCreateView object at 0xffffb4837650&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/rest_framework/views.py</code>, line 512, in dispatch
          

          
            <div class="context" id="c281473711211840">
              
                <ol start="505" class="pre-context" id="pre281473711211840">
                
                  <li onclick="toggle('pre281473711211840', 'post281473711211840')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre281473711211840', 'post281473711211840')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre281473711211840', 'post281473711211840')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre281473711211840', 'post281473711211840')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre281473711211840', 'post281473711211840')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre281473711211840', 'post281473711211840')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre281473711211840', 'post281473711211840')"><pre></pre></li>
                
                </ol>
              
              <ol start="512" class="context-line">
                <li onclick="toggle('pre281473711211840', 'post281473711211840')"><pre>            response = handler(request, *args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='513' class="post-context" id="post281473711211840">
                  
                  <li onclick="toggle('pre281473711211840', 'post281473711211840')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711211840', 'post281473711211840')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre281473711211840', 'post281473711211840')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre281473711211840', 'post281473711211840')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711211840', 'post281473711211840')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre281473711211840', 'post281473711211840')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711211840">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method PitcherStatCreateView.post of &lt;app.views.PitcherStatCreateView object at 0xffffb4837650&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/api/pitcher_stats/create/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;app.views.PitcherStatCreateView object at 0xffffb4837650&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/app/app/views.py</code>, line 85, in post
          

          
            <div class="context" id="c281473711211328">
              
                <ol start="78" class="pre-context" id="pre281473711211328">
                
                  <li onclick="toggle('pre281473711211328', 'post281473711211328')"><pre>        api_key = request.headers.get(&#x27;X-API-Key&#x27;)</pre></li>
                
                  <li onclick="toggle('pre281473711211328', 'post281473711211328')"><pre>        expected_key = settings.SCRAPER_API_KEY</pre></li>
                
                  <li onclick="toggle('pre281473711211328', 'post281473711211328')"><pre>        if api_key != expected_key:</pre></li>
                
                  <li onclick="toggle('pre281473711211328', 'post281473711211328')"><pre>            return Response({&quot;error&quot;: &quot;Unauthorized&quot;}, status=status.HTTP_401_UNAUTHORIZED)</pre></li>
                
                  <li onclick="toggle('pre281473711211328', 'post281473711211328')"><pre>        serializer = PitcherStatSerializer(data=request.data)</pre></li>
                
                  <li onclick="toggle('pre281473711211328', 'post281473711211328')"><pre>        if serializer.is_valid():</pre></li>
                
                  <li onclick="toggle('pre281473711211328', 'post281473711211328')"><pre>            serializer.save()</pre></li>
                
                </ol>
              
              <ol start="85" class="context-line">
                <li onclick="toggle('pre281473711211328', 'post281473711211328')"><pre>            return Response(serializer.data, status=status.HTTP_201_CREATED)
                                ^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='86' class="post-context" id="post281473711211328">
                  
                  <li onclick="toggle('pre281473711211328', 'post281473711211328')"><pre>        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)</pre></li>
                  
                  <li onclick="toggle('pre281473711211328', 'post281473711211328')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711211328', 'post281473711211328')"><pre>class FieldingStatCreateView(APIView):</pre></li>
                  
                  <li onclick="toggle('pre281473711211328', 'post281473711211328')"><pre>    permission_classes = [AllowAny]</pre></li>
                  
                  <li onclick="toggle('pre281473711211328', 'post281473711211328')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711211328', 'post281473711211328')"><pre>    def post(self, request):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711211328">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>api_key</td>
                    <td class="code"><pre>&#x27;my_unoriginal_scraper_api_key&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>expected_key</td>
                    <td class="code"><pre>&#x27;my_unoriginal_scraper_api_key&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/api/pitcher_stats/create/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;app.views.PitcherStatCreateView object at 0xffffb4837650&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>serializer</td>
                    <td class="code"><pre>PitcherStatSerializer(data={&#x27;player_id&#x27;: 10, &#x27;game_id&#x27;: 202547, &#x27;starter&#x27;: True, &#x27;ip&#x27;: 8.0, &#x27;h&#x27;: 5, &#x27;r&#x27;: 2, &#x27;er&#x27;: 2, &#x27;bb&#x27;: 1, &#x27;so&#x27;: 6, &#x27;bf&#x27;: 28, &#x27;doubles_allowed&#x27;: 1, &#x27;triples_allowed&#x27;: 0, &#x27;hr_allowed&#x27;: 1, &#x27;wp&#x27;: 0, &#x27;hb&#x27;: 0, &#x27;ibb&#x27;: 0, &#x27;balk&#x27;: 0, &#x27;ir&#x27;: 0, &#x27;irs&#x27;: 0, &#x27;sh_allowed&#x27;: 0, &#x27;sf_allowed&#x27;: 0, &#x27;kl&#x27;: 2, &#x27;pickoffs&#x27;: 0, &#x27;win&#x27;: True, &#x27;loss&#x27;: False, &#x27;sv&#x27;: False}):
    id = IntegerField(label=&#x27;ID&#x27;, read_only=True)
    player_name = CharField(read_only=True, source=&#x27;player_id.player_name&#x27;)
    opponent = CharField(read_only=True, source=&#x27;game_id.opponent&#x27;)
    ab = SerializerMethodField()
    game_date = DateField(read_only=True, source=&#x27;game_id.game_date&#x27;)
    game_result = SerializerMethodField()
    box_score_link = CharField(read_only=True, source=&#x27;game_id.box_score_link&#x27;)
    era = SerializerMethodField()
    outs = SerializerMethodField()
    decision = SerializerMethodField()
    home = BooleanField(read_only=True, source=&#x27;game_id.selected_team_home&#x27;)
    starter = BooleanField()
    ip = DecimalField(decimal_places=1, max_digits=4)
    h = IntegerField(max_value=2147483647, min_value=-2147483648)
    r = IntegerField(max_value=2147483647, min_value=-2147483648)
    er = IntegerField(max_value=2147483647, min_value=-2147483648)
    bb = IntegerField(max_value=2147483647, min_value=-2147483648)
    so = IntegerField(max_value=2147483647, min_value=-2147483648)
    bf = IntegerField(max_value=2147483647, min_value=-2147483648)
    doubles_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    triples_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    hr_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    wp = IntegerField(max_value=2147483647, min_value=-2147483648)
    hb = IntegerField(max_value=2147483647, min_value=-2147483648)
    ibb = IntegerField(max_value=2147483647, min_value=-2147483648)
    balk = IntegerField(max_value=2147483647, min_value=-2147483648)
    ir = IntegerField(max_value=2147483647, min_value=-2147483648)
    irs = IntegerField(max_value=2147483647, min_value=-2147483648)
    sh_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    sf_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    kl = IntegerField(max_value=2147483647, min_value=-2147483648)
    pickoffs = IntegerField(max_value=2147483647, min_value=-2147483648)
    win = BooleanField()
    loss = BooleanField()
    sv = BooleanField()
    player_id = PrimaryKeyRelatedField(allow_null=True, queryset=PlayerInfo.objects.all(), required=False)
    game_id = PrimaryKeyRelatedField(allow_null=True, queryset=GameInfo.objects.all(), required=False)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/rest_framework/serializers.py</code>, line 573, in data
          

          
            <div class="context" id="c281473711215808">
              
                <ol start="566" class="pre-context" id="pre281473711215808">
                
                  <li onclick="toggle('pre281473711215808', 'post281473711215808')"><pre>        return BoundField(field, value, error)</pre></li>
                
                  <li onclick="toggle('pre281473711215808', 'post281473711215808')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711215808', 'post281473711215808')"><pre>    # Include a backlink to the serializer class on return objects.</pre></li>
                
                  <li onclick="toggle('pre281473711215808', 'post281473711215808')"><pre>    # Allows renderers such as HTMLFormRenderer to get the full field info.</pre></li>
                
                  <li onclick="toggle('pre281473711215808', 'post281473711215808')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711215808', 'post281473711215808')"><pre>    @property</pre></li>
                
                  <li onclick="toggle('pre281473711215808', 'post281473711215808')"><pre>    def data(self):</pre></li>
                
                </ol>
              
              <ol start="573" class="context-line">
                <li onclick="toggle('pre281473711215808', 'post281473711215808')"><pre>        ret = super().data
                   ^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='574' class="post-context" id="post281473711215808">
                  
                  <li onclick="toggle('pre281473711215808', 'post281473711215808')"><pre>        return ReturnDict(ret, serializer=self)</pre></li>
                  
                  <li onclick="toggle('pre281473711215808', 'post281473711215808')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711215808', 'post281473711215808')"><pre>    @property</pre></li>
                  
                  <li onclick="toggle('pre281473711215808', 'post281473711215808')"><pre>    def errors(self):</pre></li>
                  
                  <li onclick="toggle('pre281473711215808', 'post281473711215808')"><pre>        ret = super().errors</pre></li>
                  
                  <li onclick="toggle('pre281473711215808', 'post281473711215808')"><pre>        if isinstance(ret, list) and len(ret) == 1 and getattr(ret[0], &#x27;code&#x27;, None) == &#x27;null&#x27;:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711215808">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;rest_framework.serializers.Serializer&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>PitcherStatSerializer(data={&#x27;player_id&#x27;: 10, &#x27;game_id&#x27;: 202547, &#x27;starter&#x27;: True, &#x27;ip&#x27;: 8.0, &#x27;h&#x27;: 5, &#x27;r&#x27;: 2, &#x27;er&#x27;: 2, &#x27;bb&#x27;: 1, &#x27;so&#x27;: 6, &#x27;bf&#x27;: 28, &#x27;doubles_allowed&#x27;: 1, &#x27;triples_allowed&#x27;: 0, &#x27;hr_allowed&#x27;: 1, &#x27;wp&#x27;: 0, &#x27;hb&#x27;: 0, &#x27;ibb&#x27;: 0, &#x27;balk&#x27;: 0, &#x27;ir&#x27;: 0, &#x27;irs&#x27;: 0, &#x27;sh_allowed&#x27;: 0, &#x27;sf_allowed&#x27;: 0, &#x27;kl&#x27;: 2, &#x27;pickoffs&#x27;: 0, &#x27;win&#x27;: True, &#x27;loss&#x27;: False, &#x27;sv&#x27;: False}):
    id = IntegerField(label=&#x27;ID&#x27;, read_only=True)
    player_name = CharField(read_only=True, source=&#x27;player_id.player_name&#x27;)
    opponent = CharField(read_only=True, source=&#x27;game_id.opponent&#x27;)
    ab = SerializerMethodField()
    game_date = DateField(read_only=True, source=&#x27;game_id.game_date&#x27;)
    game_result = SerializerMethodField()
    box_score_link = CharField(read_only=True, source=&#x27;game_id.box_score_link&#x27;)
    era = SerializerMethodField()
    outs = SerializerMethodField()
    decision = SerializerMethodField()
    home = BooleanField(read_only=True, source=&#x27;game_id.selected_team_home&#x27;)
    starter = BooleanField()
    ip = DecimalField(decimal_places=1, max_digits=4)
    h = IntegerField(max_value=2147483647, min_value=-2147483648)
    r = IntegerField(max_value=2147483647, min_value=-2147483648)
    er = IntegerField(max_value=2147483647, min_value=-2147483648)
    bb = IntegerField(max_value=2147483647, min_value=-2147483648)
    so = IntegerField(max_value=2147483647, min_value=-2147483648)
    bf = IntegerField(max_value=2147483647, min_value=-2147483648)
    doubles_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    triples_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    hr_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    wp = IntegerField(max_value=2147483647, min_value=-2147483648)
    hb = IntegerField(max_value=2147483647, min_value=-2147483648)
    ibb = IntegerField(max_value=2147483647, min_value=-2147483648)
    balk = IntegerField(max_value=2147483647, min_value=-2147483648)
    ir = IntegerField(max_value=2147483647, min_value=-2147483648)
    irs = IntegerField(max_value=2147483647, min_value=-2147483648)
    sh_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    sf_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    kl = IntegerField(max_value=2147483647, min_value=-2147483648)
    pickoffs = IntegerField(max_value=2147483647, min_value=-2147483648)
    win = BooleanField()
    loss = BooleanField()
    sv = BooleanField()
    player_id = PrimaryKeyRelatedField(allow_null=True, queryset=PlayerInfo.objects.all(), required=False)
    game_id = PrimaryKeyRelatedField(allow_null=True, queryset=GameInfo.objects.all(), required=False)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/rest_framework/serializers.py</code>, line 251, in data
          

          
            <div class="context" id="c281473711211456">
              
                <ol start="244" class="pre-context" id="pre281473711211456">
                
                  <li onclick="toggle('pre281473711211456', 'post281473711211456')"><pre>                &#x27;You should either call `.is_valid()` first, &#x27;</pre></li>
                
                  <li onclick="toggle('pre281473711211456', 'post281473711211456')"><pre>                &#x27;or access `.initial_data` instead.&#x27;</pre></li>
                
                  <li onclick="toggle('pre281473711211456', 'post281473711211456')"><pre>            )</pre></li>
                
                  <li onclick="toggle('pre281473711211456', 'post281473711211456')"><pre>            raise AssertionError(msg)</pre></li>
                
                  <li onclick="toggle('pre281473711211456', 'post281473711211456')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711211456', 'post281473711211456')"><pre>        if not hasattr(self, &#x27;_data&#x27;):</pre></li>
                
                  <li onclick="toggle('pre281473711211456', 'post281473711211456')"><pre>            if self.instance is not None and not getattr(self, &#x27;_errors&#x27;, None):</pre></li>
                
                </ol>
              
              <ol start="251" class="context-line">
                <li onclick="toggle('pre281473711211456', 'post281473711211456')"><pre>                self._data = self.to_representation(self.instance)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='252' class="post-context" id="post281473711211456">
                  
                  <li onclick="toggle('pre281473711211456', 'post281473711211456')"><pre>            elif hasattr(self, &#x27;_validated_data&#x27;) and not getattr(self, &#x27;_errors&#x27;, None):</pre></li>
                  
                  <li onclick="toggle('pre281473711211456', 'post281473711211456')"><pre>                self._data = self.to_representation(self.validated_data)</pre></li>
                  
                  <li onclick="toggle('pre281473711211456', 'post281473711211456')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre281473711211456', 'post281473711211456')"><pre>                self._data = self.get_initial()</pre></li>
                  
                  <li onclick="toggle('pre281473711211456', 'post281473711211456')"><pre>        return self._data</pre></li>
                  
                  <li onclick="toggle('pre281473711211456', 'post281473711211456')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711211456">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>PitcherStatSerializer(data={&#x27;player_id&#x27;: 10, &#x27;game_id&#x27;: 202547, &#x27;starter&#x27;: True, &#x27;ip&#x27;: 8.0, &#x27;h&#x27;: 5, &#x27;r&#x27;: 2, &#x27;er&#x27;: 2, &#x27;bb&#x27;: 1, &#x27;so&#x27;: 6, &#x27;bf&#x27;: 28, &#x27;doubles_allowed&#x27;: 1, &#x27;triples_allowed&#x27;: 0, &#x27;hr_allowed&#x27;: 1, &#x27;wp&#x27;: 0, &#x27;hb&#x27;: 0, &#x27;ibb&#x27;: 0, &#x27;balk&#x27;: 0, &#x27;ir&#x27;: 0, &#x27;irs&#x27;: 0, &#x27;sh_allowed&#x27;: 0, &#x27;sf_allowed&#x27;: 0, &#x27;kl&#x27;: 2, &#x27;pickoffs&#x27;: 0, &#x27;win&#x27;: True, &#x27;loss&#x27;: False, &#x27;sv&#x27;: False}):
    id = IntegerField(label=&#x27;ID&#x27;, read_only=True)
    player_name = CharField(read_only=True, source=&#x27;player_id.player_name&#x27;)
    opponent = CharField(read_only=True, source=&#x27;game_id.opponent&#x27;)
    ab = SerializerMethodField()
    game_date = DateField(read_only=True, source=&#x27;game_id.game_date&#x27;)
    game_result = SerializerMethodField()
    box_score_link = CharField(read_only=True, source=&#x27;game_id.box_score_link&#x27;)
    era = SerializerMethodField()
    outs = SerializerMethodField()
    decision = SerializerMethodField()
    home = BooleanField(read_only=True, source=&#x27;game_id.selected_team_home&#x27;)
    starter = BooleanField()
    ip = DecimalField(decimal_places=1, max_digits=4)
    h = IntegerField(max_value=2147483647, min_value=-2147483648)
    r = IntegerField(max_value=2147483647, min_value=-2147483648)
    er = IntegerField(max_value=2147483647, min_value=-2147483648)
    bb = IntegerField(max_value=2147483647, min_value=-2147483648)
    so = IntegerField(max_value=2147483647, min_value=-2147483648)
    bf = IntegerField(max_value=2147483647, min_value=-2147483648)
    doubles_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    triples_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    hr_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    wp = IntegerField(max_value=2147483647, min_value=-2147483648)
    hb = IntegerField(max_value=2147483647, min_value=-2147483648)
    ibb = IntegerField(max_value=2147483647, min_value=-2147483648)
    balk = IntegerField(max_value=2147483647, min_value=-2147483648)
    ir = IntegerField(max_value=2147483647, min_value=-2147483648)
    irs = IntegerField(max_value=2147483647, min_value=-2147483648)
    sh_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    sf_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    kl = IntegerField(max_value=2147483647, min_value=-2147483648)
    pickoffs = IntegerField(max_value=2147483647, min_value=-2147483648)
    win = BooleanField()
    loss = BooleanField()
    sv = BooleanField()
    player_id = PrimaryKeyRelatedField(allow_null=True, queryset=PlayerInfo.objects.all(), required=False)
    game_id = PrimaryKeyRelatedField(allow_null=True, queryset=GameInfo.objects.all(), required=False)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/rest_framework/serializers.py</code>, line 540, in to_representation
          

          
            <div class="context" id="c281473711212544">
              
                <ol start="533" class="pre-context" id="pre281473711212544">
                
                  <li onclick="toggle('pre281473711212544', 'post281473711212544')"><pre>            #</pre></li>
                
                  <li onclick="toggle('pre281473711212544', 'post281473711212544')"><pre>            # For related fields with `use_pk_only_optimization` we need to</pre></li>
                
                  <li onclick="toggle('pre281473711212544', 'post281473711212544')"><pre>            # resolve the pk value.</pre></li>
                
                  <li onclick="toggle('pre281473711212544', 'post281473711212544')"><pre>            check_for_none = attribute.pk if isinstance(attribute, PKOnlyObject) else attribute</pre></li>
                
                  <li onclick="toggle('pre281473711212544', 'post281473711212544')"><pre>            if check_for_none is None:</pre></li>
                
                  <li onclick="toggle('pre281473711212544', 'post281473711212544')"><pre>                ret[field.field_name] = None</pre></li>
                
                  <li onclick="toggle('pre281473711212544', 'post281473711212544')"><pre>            else:</pre></li>
                
                </ol>
              
              <ol start="540" class="context-line">
                <li onclick="toggle('pre281473711212544', 'post281473711212544')"><pre>                ret[field.field_name] = field.to_representation(attribute)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='541' class="post-context" id="post281473711212544">
                  
                  <li onclick="toggle('pre281473711212544', 'post281473711212544')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711212544', 'post281473711212544')"><pre>        return ret</pre></li>
                  
                  <li onclick="toggle('pre281473711212544', 'post281473711212544')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711212544', 'post281473711212544')"><pre>    def validate(self, attrs):</pre></li>
                  
                  <li onclick="toggle('pre281473711212544', 'post281473711212544')"><pre>        return attrs</pre></li>
                  
                  <li onclick="toggle('pre281473711212544', 'post281473711212544')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711212544">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>attribute</td>
                    <td class="code"><pre>&lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>check_for_none</td>
                    <td class="code"><pre>&lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>SerializerMethodField()</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>&lt;generator object Serializer._readable_fields at 0xffffb53a37c0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>instance</td>
                    <td class="code"><pre>&lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>ret</td>
                    <td class="code"><pre>{&#x27;ab&#x27;: 27,
 &#x27;box_score_link&#x27;: &#x27;https://stats.ncaa.org/contests/6317487/box_score&#x27;,
 &#x27;era&#x27;: Decimal(&#x27;2.25&#x27;),
 &#x27;game_date&#x27;: &#x27;2025-05-15&#x27;,
 &#x27;game_result&#x27;: &#x27;W 12-2&#x27;,
 &#x27;id&#x27;: 23,
 &#x27;opponent&#x27;: &#x27;Virginia Tech&#x27;,
 &#x27;outs&#x27;: Decimal(&#x27;552.0&#x27;),
 &#x27;player_name&#x27;: &#x27;Jay Woolfolk&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>PitcherStatSerializer(data={&#x27;player_id&#x27;: 10, &#x27;game_id&#x27;: 202547, &#x27;starter&#x27;: True, &#x27;ip&#x27;: 8.0, &#x27;h&#x27;: 5, &#x27;r&#x27;: 2, &#x27;er&#x27;: 2, &#x27;bb&#x27;: 1, &#x27;so&#x27;: 6, &#x27;bf&#x27;: 28, &#x27;doubles_allowed&#x27;: 1, &#x27;triples_allowed&#x27;: 0, &#x27;hr_allowed&#x27;: 1, &#x27;wp&#x27;: 0, &#x27;hb&#x27;: 0, &#x27;ibb&#x27;: 0, &#x27;balk&#x27;: 0, &#x27;ir&#x27;: 0, &#x27;irs&#x27;: 0, &#x27;sh_allowed&#x27;: 0, &#x27;sf_allowed&#x27;: 0, &#x27;kl&#x27;: 2, &#x27;pickoffs&#x27;: 0, &#x27;win&#x27;: True, &#x27;loss&#x27;: False, &#x27;sv&#x27;: False}):
    id = IntegerField(label=&#x27;ID&#x27;, read_only=True)
    player_name = CharField(read_only=True, source=&#x27;player_id.player_name&#x27;)
    opponent = CharField(read_only=True, source=&#x27;game_id.opponent&#x27;)
    ab = SerializerMethodField()
    game_date = DateField(read_only=True, source=&#x27;game_id.game_date&#x27;)
    game_result = SerializerMethodField()
    box_score_link = CharField(read_only=True, source=&#x27;game_id.box_score_link&#x27;)
    era = SerializerMethodField()
    outs = SerializerMethodField()
    decision = SerializerMethodField()
    home = BooleanField(read_only=True, source=&#x27;game_id.selected_team_home&#x27;)
    starter = BooleanField()
    ip = DecimalField(decimal_places=1, max_digits=4)
    h = IntegerField(max_value=2147483647, min_value=-2147483648)
    r = IntegerField(max_value=2147483647, min_value=-2147483648)
    er = IntegerField(max_value=2147483647, min_value=-2147483648)
    bb = IntegerField(max_value=2147483647, min_value=-2147483648)
    so = IntegerField(max_value=2147483647, min_value=-2147483648)
    bf = IntegerField(max_value=2147483647, min_value=-2147483648)
    doubles_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    triples_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    hr_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    wp = IntegerField(max_value=2147483647, min_value=-2147483648)
    hb = IntegerField(max_value=2147483647, min_value=-2147483648)
    ibb = IntegerField(max_value=2147483647, min_value=-2147483648)
    balk = IntegerField(max_value=2147483647, min_value=-2147483648)
    ir = IntegerField(max_value=2147483647, min_value=-2147483648)
    irs = IntegerField(max_value=2147483647, min_value=-2147483648)
    sh_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    sf_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    kl = IntegerField(max_value=2147483647, min_value=-2147483648)
    pickoffs = IntegerField(max_value=2147483647, min_value=-2147483648)
    win = BooleanField()
    loss = BooleanField()
    sv = BooleanField()
    player_id = PrimaryKeyRelatedField(allow_null=True, queryset=PlayerInfo.objects.all(), required=False)
    game_id = PrimaryKeyRelatedField(allow_null=True, queryset=GameInfo.objects.all(), required=False)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/rest_framework/fields.py</code>, line 1870, in to_representation
          

          
            <div class="context" id="c281473711217536">
              
                <ol start="1863" class="pre-context" id="pre281473711217536">
                
                  <li onclick="toggle('pre281473711217536', 'post281473711217536')"><pre>        if self.method_name is None:</pre></li>
                
                  <li onclick="toggle('pre281473711217536', 'post281473711217536')"><pre>            self.method_name = &#x27;get_{field_name}&#x27;.format(field_name=field_name)</pre></li>
                
                  <li onclick="toggle('pre281473711217536', 'post281473711217536')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711217536', 'post281473711217536')"><pre>        super().bind(field_name, parent)</pre></li>
                
                  <li onclick="toggle('pre281473711217536', 'post281473711217536')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711217536', 'post281473711217536')"><pre>    def to_representation(self, value):</pre></li>
                
                  <li onclick="toggle('pre281473711217536', 'post281473711217536')"><pre>        method = getattr(self.parent, self.method_name)</pre></li>
                
                </ol>
              
              <ol start="1870" class="context-line">
                <li onclick="toggle('pre281473711217536', 'post281473711217536')"><pre>        return method(value)
                     ^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1871' class="post-context" id="post281473711217536">
                  
                  <li onclick="toggle('pre281473711217536', 'post281473711217536')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711217536', 'post281473711217536')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711217536', 'post281473711217536')"><pre>class ModelField(Field):</pre></li>
                  
                  <li onclick="toggle('pre281473711217536', 'post281473711217536')"><pre>    &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre281473711217536', 'post281473711217536')"><pre>    A generic field that can be used against an arbitrary model field.</pre></li>
                  
                  <li onclick="toggle('pre281473711217536', 'post281473711217536')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711217536">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&lt;bound method PitcherStatSerializer.get_decision of PitcherStatSerializer(data={&#x27;player_id&#x27;: 10, &#x27;game_id&#x27;: 202547, &#x27;starter&#x27;: True, &#x27;ip&#x27;: 8.0, &#x27;h&#x27;: 5, &#x27;r&#x27;: 2, &#x27;er&#x27;: 2, &#x27;bb&#x27;: 1, &#x27;so&#x27;: 6, &#x27;bf&#x27;: 28, &#x27;doubles_allowed&#x27;: 1, &#x27;triples_allowed&#x27;: 0, &#x27;hr_allowed&#x27;: 1, &#x27;wp&#x27;: 0, &#x27;hb&#x27;: 0, &#x27;ibb&#x27;: 0, &#x27;balk&#x27;: 0, &#x27;ir&#x27;: 0, &#x27;irs&#x27;: 0, &#x27;sh_allowed&#x27;: 0, &#x27;sf_allowed&#x27;: 0, &#x27;kl&#x27;: 2, &#x27;pickoffs&#x27;: 0, &#x27;win&#x27;: True, &#x27;loss&#x27;: False, &#x27;sv&#x27;: False}):
    id = IntegerField(label=&#x27;ID&#x27;, read_only=True)
    player_name = CharField(read_only=True, source=&#x27;player_id.player_name&#x27;)
    opponent = CharField(read_only=True, source=&#x27;game_id.opponent&#x27;)
    ab = SerializerMethodField()
    game_date = DateField(read_only=True, source=&#x27;game_id.game_date&#x27;)
    game_result = SerializerMethodField()
    box_score_link = CharField(read_only=True, source=&#x27;game_id.box_score_link&#x27;)
    era = SerializerMethodField()
    outs = SerializerMethodField()
    decision = SerializerMethodField()
    home = BooleanField(read_only=True, source=&#x27;game_id.selected_team_home&#x27;)
    starter = BooleanField()
    ip = DecimalField(decimal_places=1, max_digits=4)
    h = IntegerField(max_value=2147483647, min_value=-2147483648)
    r = IntegerField(max_value=2147483647, min_value=-2147483648)
    er = IntegerField(max_value=2147483647, min_value=-2147483648)
    bb = IntegerField(max_value=2147483647, min_value=-2147483648)
    so = IntegerField(max_value=2147483647, min_value=-2147483648)
    bf = IntegerField(max_value=2147483647, min_value=-2147483648)
    doubles_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    triples_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    hr_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    wp = IntegerField(max_value=2147483647, min_value=-2147483648)
    hb = IntegerField(max_value=2147483647, min_value=-2147483648)
    ibb = IntegerField(max_value=2147483647, min_value=-2147483648)
    balk = IntegerField(max_value=2147483647, min_value=-2147483648)
    ir = IntegerField(max_value=2147483647, min_value=-2147483648)
    irs = IntegerField(max_value=2147483647, min_value=-2147483648)
    sh_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    sf_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    kl = IntegerField(max_value=2147483647, min_value=-2147483648)
    pickoffs = IntegerField(max_value=2147483647, min_value=-2147483648)
    win = BooleanField()
    loss = BooleanField()
    sv = BooleanField()
    player_id = PrimaryKeyRelatedField(allow_null=True, queryset=PlayerInfo.objects.all(), required=False)
    game_id = PrimaryKeyRelatedField(allow_null=True, queryset=GameInfo.objects.all(), required=False)&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>SerializerMethodField()</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>&lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/app/app/serializers.py</code>, line 330, in get_decision
          

          
            <div class="context" id="c281473711216576">
              
                <ol start="323" class="pre-context" id="pre281473711216576">
                
                  <li onclick="toggle('pre281473711216576', 'post281473711216576')"><pre>        return (total_er * 27) / total_outs if total_outs &gt; 0 else None</pre></li>
                
                  <li onclick="toggle('pre281473711216576', 'post281473711216576')"><pre>    </pre></li>
                
                  <li onclick="toggle('pre281473711216576', 'post281473711216576')"><pre>    def get_decision(self, obj):</pre></li>
                
                  <li onclick="toggle('pre281473711216576', 'post281473711216576')"><pre>        win_loss = &quot;W&quot; if obj.win else &quot;L&quot; if obj.loss else &quot;S&quot; if obj.sv else &quot;ND&quot;</pre></li>
                
                  <li onclick="toggle('pre281473711216576', 'post281473711216576')"><pre>        record = (</pre></li>
                
                  <li onclick="toggle('pre281473711216576', 'post281473711216576')"><pre>            PitcherStat.objects</pre></li>
                
                  <li onclick="toggle('pre281473711216576', 'post281473711216576')"><pre>            .filter(player_id=obj.player_id, game_id__lte=obj.game_id)</pre></li>
                
                </ol>
              
              <ol start="330" class="context-line">
                <li onclick="toggle('pre281473711216576', 'post281473711216576')"><pre>            .aggregate(
                  </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='331' class="post-context" id="post281473711216576">
                  
                  <li onclick="toggle('pre281473711216576', 'post281473711216576')"><pre>                total_wins=Sum(&#x27;win&#x27;),</pre></li>
                  
                  <li onclick="toggle('pre281473711216576', 'post281473711216576')"><pre>                total_losses=Sum(&#x27;loss&#x27;),</pre></li>
                  
                  <li onclick="toggle('pre281473711216576', 'post281473711216576')"><pre>                total_saves=Sum(&#x27;sv&#x27;)</pre></li>
                  
                  <li onclick="toggle('pre281473711216576', 'post281473711216576')"><pre>            )</pre></li>
                  
                  <li onclick="toggle('pre281473711216576', 'post281473711216576')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre281473711216576', 'post281473711216576')"><pre>        if obj.win or obj.loss:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711216576">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>PitcherStatSerializer(data={&#x27;player_id&#x27;: 10, &#x27;game_id&#x27;: 202547, &#x27;starter&#x27;: True, &#x27;ip&#x27;: 8.0, &#x27;h&#x27;: 5, &#x27;r&#x27;: 2, &#x27;er&#x27;: 2, &#x27;bb&#x27;: 1, &#x27;so&#x27;: 6, &#x27;bf&#x27;: 28, &#x27;doubles_allowed&#x27;: 1, &#x27;triples_allowed&#x27;: 0, &#x27;hr_allowed&#x27;: 1, &#x27;wp&#x27;: 0, &#x27;hb&#x27;: 0, &#x27;ibb&#x27;: 0, &#x27;balk&#x27;: 0, &#x27;ir&#x27;: 0, &#x27;irs&#x27;: 0, &#x27;sh_allowed&#x27;: 0, &#x27;sf_allowed&#x27;: 0, &#x27;kl&#x27;: 2, &#x27;pickoffs&#x27;: 0, &#x27;win&#x27;: True, &#x27;loss&#x27;: False, &#x27;sv&#x27;: False}):
    id = IntegerField(label=&#x27;ID&#x27;, read_only=True)
    player_name = CharField(read_only=True, source=&#x27;player_id.player_name&#x27;)
    opponent = CharField(read_only=True, source=&#x27;game_id.opponent&#x27;)
    ab = SerializerMethodField()
    game_date = DateField(read_only=True, source=&#x27;game_id.game_date&#x27;)
    game_result = SerializerMethodField()
    box_score_link = CharField(read_only=True, source=&#x27;game_id.box_score_link&#x27;)
    era = SerializerMethodField()
    outs = SerializerMethodField()
    decision = SerializerMethodField()
    home = BooleanField(read_only=True, source=&#x27;game_id.selected_team_home&#x27;)
    starter = BooleanField()
    ip = DecimalField(decimal_places=1, max_digits=4)
    h = IntegerField(max_value=2147483647, min_value=-2147483648)
    r = IntegerField(max_value=2147483647, min_value=-2147483648)
    er = IntegerField(max_value=2147483647, min_value=-2147483648)
    bb = IntegerField(max_value=2147483647, min_value=-2147483648)
    so = IntegerField(max_value=2147483647, min_value=-2147483648)
    bf = IntegerField(max_value=2147483647, min_value=-2147483648)
    doubles_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    triples_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    hr_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    wp = IntegerField(max_value=2147483647, min_value=-2147483648)
    hb = IntegerField(max_value=2147483647, min_value=-2147483648)
    ibb = IntegerField(max_value=2147483647, min_value=-2147483648)
    balk = IntegerField(max_value=2147483647, min_value=-2147483648)
    ir = IntegerField(max_value=2147483647, min_value=-2147483648)
    irs = IntegerField(max_value=2147483647, min_value=-2147483648)
    sh_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    sf_allowed = IntegerField(max_value=2147483647, min_value=-2147483648)
    kl = IntegerField(max_value=2147483647, min_value=-2147483648)
    pickoffs = IntegerField(max_value=2147483647, min_value=-2147483648)
    win = BooleanField()
    loss = BooleanField()
    sv = BooleanField()
    player_id = PrimaryKeyRelatedField(allow_null=True, queryset=PlayerInfo.objects.all(), required=False)
    game_id = PrimaryKeyRelatedField(allow_null=True, queryset=GameInfo.objects.all(), required=False)</pre></td>
                  </tr>
                
                  <tr>
                    <td>win_loss</td>
                    <td class="code"><pre>&#x27;W&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/django/db/models/query.py</code>, line 588, in aggregate
          

          
            <div class="context" id="c281473711216832">
              
                <ol start="581" class="pre-context" id="pre281473711216832">
                
                  <li onclick="toggle('pre281473711216832', 'post281473711216832')"><pre>            # attribute.</pre></li>
                
                  <li onclick="toggle('pre281473711216832', 'post281473711216832')"><pre>            try:</pre></li>
                
                  <li onclick="toggle('pre281473711216832', 'post281473711216832')"><pre>                arg.default_alias</pre></li>
                
                  <li onclick="toggle('pre281473711216832', 'post281473711216832')"><pre>            except (AttributeError, TypeError):</pre></li>
                
                  <li onclick="toggle('pre281473711216832', 'post281473711216832')"><pre>                raise TypeError(&quot;Complex aggregates require an alias&quot;)</pre></li>
                
                  <li onclick="toggle('pre281473711216832', 'post281473711216832')"><pre>            kwargs[arg.default_alias] = arg</pre></li>
                
                  <li onclick="toggle('pre281473711216832', 'post281473711216832')"><pre></pre></li>
                
                </ol>
              
              <ol start="588" class="context-line">
                <li onclick="toggle('pre281473711216832', 'post281473711216832')"><pre>        return self.query.chain().get_aggregation(self.db, kwargs)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='589' class="post-context" id="post281473711216832">
                  
                  <li onclick="toggle('pre281473711216832', 'post281473711216832')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711216832', 'post281473711216832')"><pre>    async def aaggregate(self, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre281473711216832', 'post281473711216832')"><pre>        return await sync_to_async(self.aggregate)(*args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre281473711216832', 'post281473711216832')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711216832', 'post281473711216832')"><pre>    def count(self):</pre></li>
                  
                  <li onclick="toggle('pre281473711216832', 'post281473711216832')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711216832">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;total_losses&#x27;: Sum(F(loss)),
 &#x27;total_saves&#x27;: Sum(F(sv)),
 &#x27;total_wins&#x27;: Sum(F(win))}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &lt;PitcherStat: Jay Woolfolk - Game #Game #202547 - Virginia vs Virginia Tech on 2025-05-15 | 8.0 IP | 5 Hits | 2 Runs | 2 Earned Runs&gt;, &#x27;...(remaining elements truncated)...&#x27;]&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/django/db/models/sql/query.py</code>, line 626, in get_aggregation
          

          
            <div class="context" id="c281473711210560">
              
                <ol start="619" class="pre-context" id="pre281473711210560">
                
                  <li onclick="toggle('pre281473711210560', 'post281473711210560')"><pre>        ]</pre></li>
                
                  <li onclick="toggle('pre281473711210560', 'post281473711210560')"><pre>        elide_empty = not any(result is NotImplemented for result in empty_set_result)</pre></li>
                
                  <li onclick="toggle('pre281473711210560', 'post281473711210560')"><pre>        outer_query.clear_ordering(force=True)</pre></li>
                
                  <li onclick="toggle('pre281473711210560', 'post281473711210560')"><pre>        outer_query.clear_limits()</pre></li>
                
                  <li onclick="toggle('pre281473711210560', 'post281473711210560')"><pre>        outer_query.select_for_update = False</pre></li>
                
                  <li onclick="toggle('pre281473711210560', 'post281473711210560')"><pre>        outer_query.select_related = False</pre></li>
                
                  <li onclick="toggle('pre281473711210560', 'post281473711210560')"><pre>        compiler = outer_query.get_compiler(using, elide_empty=elide_empty)</pre></li>
                
                </ol>
              
              <ol start="626" class="context-line">
                <li onclick="toggle('pre281473711210560', 'post281473711210560')"><pre>        result = compiler.execute_sql(SINGLE)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='627' class="post-context" id="post281473711210560">
                  
                  <li onclick="toggle('pre281473711210560', 'post281473711210560')"><pre>        if result is None:</pre></li>
                  
                  <li onclick="toggle('pre281473711210560', 'post281473711210560')"><pre>            result = empty_set_result</pre></li>
                  
                  <li onclick="toggle('pre281473711210560', 'post281473711210560')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre281473711210560', 'post281473711210560')"><pre>            cols = outer_query.annotation_select.values()</pre></li>
                  
                  <li onclick="toggle('pre281473711210560', 'post281473711210560')"><pre>            converters = compiler.get_converters(cols)</pre></li>
                  
                  <li onclick="toggle('pre281473711210560', 'post281473711210560')"><pre>            rows = compiler.apply_converters((result,), converters)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711210560">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>_</td>
                    <td class="code"><pre>&lt;WhereNode: (AND: RelatedLessThanOrEqual(Col(app_pitcherstat, app.PitcherStat.game_id), 202547), RelatedExact(Col(app_pitcherstat, app.PitcherStat.player_id), 10))&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>aggregate</td>
                    <td class="code"><pre>Sum(Col(app_pitcherstat, app.PitcherStat.sv))</pre></td>
                  </tr>
                
                  <tr>
                    <td>aggregate_expr</td>
                    <td class="code"><pre>Sum(F(sv))</pre></td>
                  </tr>
                
                  <tr>
                    <td>aggregate_exprs</td>
                    <td class="code"><pre>{&#x27;total_losses&#x27;: Sum(F(loss)),
 &#x27;total_saves&#x27;: Sum(F(sv)),
 &#x27;total_wins&#x27;: Sum(F(win))}</pre></td>
                  </tr>
                
                  <tr>
                    <td>aggregate_refs</td>
                    <td class="code"><pre>set()</pre></td>
                  </tr>
                
                  <tr>
                    <td>aggregates</td>
                    <td class="code"><pre>{&#x27;total_losses&#x27;: Sum(Col(app_pitcherstat, app.PitcherStat.loss)),
 &#x27;total_saves&#x27;: Sum(Col(app_pitcherstat, app.PitcherStat.sv)),
 &#x27;total_wins&#x27;: Sum(Col(app_pitcherstat, app.PitcherStat.win))}</pre></td>
                  </tr>
                
                  <tr>
                    <td>alias</td>
                    <td class="code"><pre>&#x27;total_saves&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>annotation_select_mask</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>compiler</td>
                    <td class="code"><pre>&lt;SQLCompiler model=PitcherStat connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>elide_empty</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>empty_set_result</td>
                    <td class="code"><pre>[None, None, None]</pre></td>
                  </tr>
                
                  <tr>
                    <td>has_existing_aggregation</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>having</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>outer_query</td>
                    <td class="code"><pre>&lt;django.db.models.sql.query.Query object at 0xffffb4842f80&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>qualify</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>refs_subquery</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>refs_window</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>replacements</td>
                    <td class="code"><pre>{Ref(total_losses, Sum(Col(app_pitcherstat, app.PitcherStat.loss))): Sum(Col(app_pitcherstat, app.PitcherStat.loss)),
 Ref(total_saves, Sum(Col(app_pitcherstat, app.PitcherStat.sv))): Sum(Col(app_pitcherstat, app.PitcherStat.sv)),
 Ref(total_wins, Sum(Col(app_pitcherstat, app.PitcherStat.win))): Sum(Col(app_pitcherstat, app.PitcherStat.win))}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.sql.query.Query object at 0xffffb4842f80&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>set_returning_annotations</td>
                    <td class="code"><pre>set()</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/django/db/models/sql/compiler.py</code>, line 1623, in execute_sql
          

          
            <div class="context" id="c281473721351296">
              
                <ol start="1616" class="pre-context" id="pre281473721351296">
                
                  <li onclick="toggle('pre281473721351296', 'post281473721351296')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre281473721351296', 'post281473721351296')"><pre>                return</pre></li>
                
                  <li onclick="toggle('pre281473721351296', 'post281473721351296')"><pre>        if chunked_fetch:</pre></li>
                
                  <li onclick="toggle('pre281473721351296', 'post281473721351296')"><pre>            cursor = self.connection.chunked_cursor()</pre></li>
                
                  <li onclick="toggle('pre281473721351296', 'post281473721351296')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre281473721351296', 'post281473721351296')"><pre>            cursor = self.connection.cursor()</pre></li>
                
                  <li onclick="toggle('pre281473721351296', 'post281473721351296')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="1623" class="context-line">
                <li onclick="toggle('pre281473721351296', 'post281473721351296')"><pre>            cursor.execute(sql, params)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1624' class="post-context" id="post281473721351296">
                  
                  <li onclick="toggle('pre281473721351296', 'post281473721351296')"><pre>        except Exception:</pre></li>
                  
                  <li onclick="toggle('pre281473721351296', 'post281473721351296')"><pre>            # Might fail for server-side cursors (e.g. connection closed)</pre></li>
                  
                  <li onclick="toggle('pre281473721351296', 'post281473721351296')"><pre>            cursor.close()</pre></li>
                  
                  <li onclick="toggle('pre281473721351296', 'post281473721351296')"><pre>            raise</pre></li>
                  
                  <li onclick="toggle('pre281473721351296', 'post281473721351296')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473721351296', 'post281473721351296')"><pre>        if result_type == ROW_COUNT:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473721351296">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>chunk_size</td>
                    <td class="code"><pre>100</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked_fetch</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>cursor</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0xffffb4957410&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(202547, 10)</pre></td>
                  </tr>
                
                  <tr>
                    <td>result_type</td>
                    <td class="code"><pre>&#x27;single&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLCompiler model=PitcherStat connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, &#x27;
 &#x27;SUM(&quot;app_pitcherstat&quot;.&quot;loss&quot;) AS &quot;total_losses&quot;, SUM(&quot;app_pitcherstat&quot;.&quot;sv&quot;) &#x27;
 &#x27;AS &quot;total_saves&quot; FROM &quot;app_pitcherstat&quot; WHERE &#x27;
 &#x27;(&quot;app_pitcherstat&quot;.&quot;game_id_id&quot; &lt;= %s AND &quot;app_pitcherstat&quot;.&quot;player_id_id&quot; = &#x27;
 &#x27;%s)&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/django/db/backends/utils.py</code>, line 122, in execute
          

          
            <div class="context" id="c281473711216320">
              
                <ol start="115" class="pre-context" id="pre281473711216320">
                
                  <li onclick="toggle('pre281473711216320', 'post281473711216320')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711216320', 'post281473711216320')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711216320', 'post281473711216320')"><pre>class CursorDebugWrapper(CursorWrapper):</pre></li>
                
                  <li onclick="toggle('pre281473711216320', 'post281473711216320')"><pre>    # XXX callproc isn&#x27;t instrumented at this time.</pre></li>
                
                  <li onclick="toggle('pre281473711216320', 'post281473711216320')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711216320', 'post281473711216320')"><pre>    def execute(self, sql, params=None):</pre></li>
                
                  <li onclick="toggle('pre281473711216320', 'post281473711216320')"><pre>        with self.debug_sql(sql, params, use_last_executed_query=True):</pre></li>
                
                </ol>
              
              <ol start="122" class="context-line">
                <li onclick="toggle('pre281473711216320', 'post281473711216320')"><pre>            return super().execute(sql, params)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='123' class="post-context" id="post281473711216320">
                  
                  <li onclick="toggle('pre281473711216320', 'post281473711216320')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711216320', 'post281473711216320')"><pre>    def executemany(self, sql, param_list):</pre></li>
                  
                  <li onclick="toggle('pre281473711216320', 'post281473711216320')"><pre>        with self.debug_sql(sql, param_list, many=True):</pre></li>
                  
                  <li onclick="toggle('pre281473711216320', 'post281473711216320')"><pre>            return super().executemany(sql, param_list)</pre></li>
                  
                  <li onclick="toggle('pre281473711216320', 'post281473711216320')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711216320', 'post281473711216320')"><pre>    @contextmanager</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711216320">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.backends.utils.CursorDebugWrapper&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(202547, 10)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0xffffb4957410&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, &#x27;
 &#x27;SUM(&quot;app_pitcherstat&quot;.&quot;loss&quot;) AS &quot;total_losses&quot;, SUM(&quot;app_pitcherstat&quot;.&quot;sv&quot;) &#x27;
 &#x27;AS &quot;total_saves&quot; FROM &quot;app_pitcherstat&quot; WHERE &#x27;
 &#x27;(&quot;app_pitcherstat&quot;.&quot;game_id_id&quot; &lt;= %s AND &quot;app_pitcherstat&quot;.&quot;player_id_id&quot; = &#x27;
 &#x27;%s)&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/django/db/backends/utils.py</code>, line 79, in execute
          

          
            <div class="context" id="c281473711211392">
              
                <ol start="72" class="pre-context" id="pre281473711211392">
                
                  <li onclick="toggle('pre281473711211392', 'post281473711211392')"><pre>            elif kparams is None:</pre></li>
                
                  <li onclick="toggle('pre281473711211392', 'post281473711211392')"><pre>                return self.cursor.callproc(procname, params)</pre></li>
                
                  <li onclick="toggle('pre281473711211392', 'post281473711211392')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre281473711211392', 'post281473711211392')"><pre>                params = params or ()</pre></li>
                
                  <li onclick="toggle('pre281473711211392', 'post281473711211392')"><pre>                return self.cursor.callproc(procname, params, kparams)</pre></li>
                
                  <li onclick="toggle('pre281473711211392', 'post281473711211392')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711211392', 'post281473711211392')"><pre>    def execute(self, sql, params=None):</pre></li>
                
                </ol>
              
              <ol start="79" class="context-line">
                <li onclick="toggle('pre281473711211392', 'post281473711211392')"><pre>        return self._execute_with_wrappers(
                   </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='80' class="post-context" id="post281473711211392">
                  
                  <li onclick="toggle('pre281473711211392', 'post281473711211392')"><pre>            sql, params, many=False, executor=self._execute</pre></li>
                  
                  <li onclick="toggle('pre281473711211392', 'post281473711211392')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre281473711211392', 'post281473711211392')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711211392', 'post281473711211392')"><pre>    def executemany(self, sql, param_list):</pre></li>
                  
                  <li onclick="toggle('pre281473711211392', 'post281473711211392')"><pre>        return self._execute_with_wrappers(</pre></li>
                  
                  <li onclick="toggle('pre281473711211392', 'post281473711211392')"><pre>            sql, param_list, many=True, executor=self._executemany</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711211392">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(202547, 10)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0xffffb4957410&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, &#x27;
 &#x27;SUM(&quot;app_pitcherstat&quot;.&quot;loss&quot;) AS &quot;total_losses&quot;, SUM(&quot;app_pitcherstat&quot;.&quot;sv&quot;) &#x27;
 &#x27;AS &quot;total_saves&quot; FROM &quot;app_pitcherstat&quot; WHERE &#x27;
 &#x27;(&quot;app_pitcherstat&quot;.&quot;game_id_id&quot; &lt;= %s AND &quot;app_pitcherstat&quot;.&quot;player_id_id&quot; = &#x27;
 &#x27;%s)&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/django/db/backends/utils.py</code>, line 92, in _execute_with_wrappers
          

          
            <div class="context" id="c281473711302656">
              
                <ol start="85" class="pre-context" id="pre281473711302656">
                
                  <li onclick="toggle('pre281473711302656', 'post281473711302656')"><pre>            sql, param_list, many=True, executor=self._executemany</pre></li>
                
                  <li onclick="toggle('pre281473711302656', 'post281473711302656')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre281473711302656', 'post281473711302656')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711302656', 'post281473711302656')"><pre>    def _execute_with_wrappers(self, sql, params, many, executor):</pre></li>
                
                  <li onclick="toggle('pre281473711302656', 'post281473711302656')"><pre>        context = {&quot;connection&quot;: self.db, &quot;cursor&quot;: self}</pre></li>
                
                  <li onclick="toggle('pre281473711302656', 'post281473711302656')"><pre>        for wrapper in reversed(self.db.execute_wrappers):</pre></li>
                
                  <li onclick="toggle('pre281473711302656', 'post281473711302656')"><pre>            executor = functools.partial(wrapper, executor)</pre></li>
                
                </ol>
              
              <ol start="92" class="context-line">
                <li onclick="toggle('pre281473711302656', 'post281473711302656')"><pre>        return executor(sql, params, many, context)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='93' class="post-context" id="post281473711302656">
                  
                  <li onclick="toggle('pre281473711302656', 'post281473711302656')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711302656', 'post281473711302656')"><pre>    def _execute(self, sql, params, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre281473711302656', 'post281473711302656')"><pre>        # Raise a warning during app initialization (stored_app_configs is only</pre></li>
                  
                  <li onclick="toggle('pre281473711302656', 'post281473711302656')"><pre>        # ever set during testing).</pre></li>
                  
                  <li onclick="toggle('pre281473711302656', 'post281473711302656')"><pre>        if not apps.ready and not apps.stored_app_configs:</pre></li>
                  
                  <li onclick="toggle('pre281473711302656', 'post281473711302656')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711302656">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
 &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0xffffb4957410&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>executor</td>
                    <td class="code"><pre>&lt;bound method CursorWrapper._execute of &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0xffffb4957410&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>many</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(202547, 10)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0xffffb4957410&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, &#x27;
 &#x27;SUM(&quot;app_pitcherstat&quot;.&quot;loss&quot;) AS &quot;total_losses&quot;, SUM(&quot;app_pitcherstat&quot;.&quot;sv&quot;) &#x27;
 &#x27;AS &quot;total_saves&quot; FROM &quot;app_pitcherstat&quot; WHERE &#x27;
 &#x27;(&quot;app_pitcherstat&quot;.&quot;game_id_id&quot; &lt;= %s AND &quot;app_pitcherstat&quot;.&quot;player_id_id&quot; = &#x27;
 &#x27;%s)&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/django/db/backends/utils.py</code>, line 100, in _execute
          

          
            <div class="context" id="c281473711193408">
              
                <ol start="93" class="pre-context" id="pre281473711193408">
                
                  <li onclick="toggle('pre281473711193408', 'post281473711193408')"><pre></pre></li>
                
                  <li onclick="toggle('pre281473711193408', 'post281473711193408')"><pre>    def _execute(self, sql, params, *ignored_wrapper_args):</pre></li>
                
                  <li onclick="toggle('pre281473711193408', 'post281473711193408')"><pre>        # Raise a warning during app initialization (stored_app_configs is only</pre></li>
                
                  <li onclick="toggle('pre281473711193408', 'post281473711193408')"><pre>        # ever set during testing).</pre></li>
                
                  <li onclick="toggle('pre281473711193408', 'post281473711193408')"><pre>        if not apps.ready and not apps.stored_app_configs:</pre></li>
                
                  <li onclick="toggle('pre281473711193408', 'post281473711193408')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                
                  <li onclick="toggle('pre281473711193408', 'post281473711193408')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                </ol>
              
              <ol start="100" class="context-line">
                <li onclick="toggle('pre281473711193408', 'post281473711193408')"><pre>        with self.db.wrap_database_errors:
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='101' class="post-context" id="post281473711193408">
                  
                  <li onclick="toggle('pre281473711193408', 'post281473711193408')"><pre>            if params is None:</pre></li>
                  
                  <li onclick="toggle('pre281473711193408', 'post281473711193408')"><pre>                # params default might be backend specific.</pre></li>
                  
                  <li onclick="toggle('pre281473711193408', 'post281473711193408')"><pre>                return self.cursor.execute(sql)</pre></li>
                  
                  <li onclick="toggle('pre281473711193408', 'post281473711193408')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre281473711193408', 'post281473711193408')"><pre>                return self.cursor.execute(sql, params)</pre></li>
                  
                  <li onclick="toggle('pre281473711193408', 'post281473711193408')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711193408">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0xffffb4957410&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(202547, 10)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0xffffb4957410&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, &#x27;
 &#x27;SUM(&quot;app_pitcherstat&quot;.&quot;loss&quot;) AS &quot;total_losses&quot;, SUM(&quot;app_pitcherstat&quot;.&quot;sv&quot;) &#x27;
 &#x27;AS &quot;total_saves&quot; FROM &quot;app_pitcherstat&quot; WHERE &#x27;
 &#x27;(&quot;app_pitcherstat&quot;.&quot;game_id_id&quot; &lt;= %s AND &quot;app_pitcherstat&quot;.&quot;player_id_id&quot; = &#x27;
 &#x27;%s)&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/django/db/utils.py</code>, line 91, in __exit__
          

          
            <div class="context" id="c281473722519616">
              
                <ol start="84" class="pre-context" id="pre281473722519616">
                
                  <li onclick="toggle('pre281473722519616', 'post281473722519616')"><pre>            db_exc_type = getattr(self.wrapper.Database, dj_exc_type.__name__)</pre></li>
                
                  <li onclick="toggle('pre281473722519616', 'post281473722519616')"><pre>            if issubclass(exc_type, db_exc_type):</pre></li>
                
                  <li onclick="toggle('pre281473722519616', 'post281473722519616')"><pre>                dj_exc_value = dj_exc_type(*exc_value.args)</pre></li>
                
                  <li onclick="toggle('pre281473722519616', 'post281473722519616')"><pre>                # Only set the &#x27;errors_occurred&#x27; flag for errors that may make</pre></li>
                
                  <li onclick="toggle('pre281473722519616', 'post281473722519616')"><pre>                # the connection unusable.</pre></li>
                
                  <li onclick="toggle('pre281473722519616', 'post281473722519616')"><pre>                if dj_exc_type not in (DataError, IntegrityError):</pre></li>
                
                  <li onclick="toggle('pre281473722519616', 'post281473722519616')"><pre>                    self.wrapper.errors_occurred = True</pre></li>
                
                </ol>
              
              <ol start="91" class="context-line">
                <li onclick="toggle('pre281473722519616', 'post281473722519616')"><pre>                raise dj_exc_value.with_traceback(traceback) from exc_value
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='92' class="post-context" id="post281473722519616">
                  
                  <li onclick="toggle('pre281473722519616', 'post281473722519616')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473722519616', 'post281473722519616')"><pre>    def __call__(self, func):</pre></li>
                  
                  <li onclick="toggle('pre281473722519616', 'post281473722519616')"><pre>        # Note that we are intentionally not using @wraps here for performance</pre></li>
                  
                  <li onclick="toggle('pre281473722519616', 'post281473722519616')"><pre>        # reasons. Refs #21109.</pre></li>
                  
                  <li onclick="toggle('pre281473722519616', 'post281473722519616')"><pre>        def inner(*args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre281473722519616', 'post281473722519616')"><pre>            with self:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473722519616">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>db_exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;psycopg2.ProgrammingError&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>dj_exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.utils.ProgrammingError&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>dj_exc_value</td>
                    <td class="code"><pre>ProgrammingError(&#x27;function sum(boolean) does not exist\nLINE 1: SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, SUM(&quot;ap...\n               ^\nHINT:  No function matches the given name and argument types. You might need to add explicit type casts.\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;psycopg2.errors.UndefinedFunction&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc_value</td>
                    <td class="code"><pre>UndefinedFunction(&#x27;function sum(boolean) does not exist\nLINE 1: SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, SUM(&quot;ap...\n               ^\nHINT:  No function matches the given name and argument types. You might need to add explicit type casts.\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.utils.DatabaseErrorWrapper object at 0xffffb545c140&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>traceback</td>
                    <td class="code"><pre>&lt;traceback object at 0xffffb4979240&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.13/site-packages/django/db/backends/utils.py</code>, line 105, in _execute
          

          
            <div class="context" id="c281473711575616">
              
                <ol start="98" class="pre-context" id="pre281473711575616">
                
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>        with self.db.wrap_database_errors:</pre></li>
                
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>            if params is None:</pre></li>
                
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>                # params default might be backend specific.</pre></li>
                
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>                return self.cursor.execute(sql)</pre></li>
                
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>            else:</pre></li>
                
                </ol>
              
              <ol start="105" class="context-line">
                <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>                return self.cursor.execute(sql, params)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='106' class="post-context" id="post281473711575616">
                  
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre></pre></li>
                  
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>    def _executemany(self, sql, param_list, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>        # Raise a warning during app initialization (stored_app_configs is only</pre></li>
                  
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>        # ever set during testing).</pre></li>
                  
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>        if not apps.ready and not apps.stored_app_configs:</pre></li>
                  
                  <li onclick="toggle('pre281473711575616', 'post281473711575616')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v281473711575616">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0xffffb4957410&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(202547, 10)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0xffffb4957410&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, &#x27;
 &#x27;SUM(&quot;app_pitcherstat&quot;.&quot;loss&quot;) AS &quot;total_losses&quot;, SUM(&quot;app_pitcherstat&quot;.&quot;sv&quot;) &#x27;
 &#x27;AS &quot;total_saves&quot; FROM &quot;app_pitcherstat&quot; WHERE &#x27;
 &#x27;(&quot;app_pitcherstat&quot;.&quot;game_id_id&quot; &lt;= %s AND &quot;app_pitcherstat&quot;.&quot;player_id_id&quot; = &#x27;
 &#x27;%s)&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ProgrammingError at /api/pitcher_stats/create/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://127.0.0.1:8000/api/pitcher_stats/create/

Django Version: 5.2.1
Python Version: 3.13.2
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;app&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;django_filters&#x27;]
Installed Middleware:
[&#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/usr/local/lib/python3.13/site-packages/django/db/backends/utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The above exception (function sum(boolean) does not exist
LINE 1: SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, SUM(&quot;ap...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
) was the direct cause of the following exception:
  File "/usr/local/lib/python3.13/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/rest_framework/views.py", line 515, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/rest_framework/views.py", line 475, in handle_exception
    self.raise_uncaught_exception(exc)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/rest_framework/views.py", line 486, in raise_uncaught_exception
    raise exc
    ^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/rest_framework/views.py", line 512, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/app/views.py", line 85, in post
    return Response(serializer.data, status=status.HTTP_201_CREATED)
                    ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/rest_framework/serializers.py", line 573, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/rest_framework/serializers.py", line 251, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/rest_framework/serializers.py", line 540, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/rest_framework/fields.py", line 1870, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "/app/app/serializers.py", line 330, in get_decision
    .aggregate(
     
  File "/usr/local/lib/python3.13/site-packages/django/db/models/query.py", line 588, in aggregate
    return self.query.chain().get_aggregation(self.db, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/django/db/models/sql/query.py", line 626, in get_aggregation
    result = compiler.execute_sql(SINGLE)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/django/db/models/sql/compiler.py", line 1623, in execute_sql
    cursor.execute(sql, params)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/django/db/backends/utils.py", line 122, in execute
    return super().execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/django/db/backends/utils.py", line 79, in execute
    return self._execute_with_wrappers(
           
  File "/usr/local/lib/python3.13/site-packages/django/db/backends/utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/django/db/backends/utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/django/db/utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/django/db/backends/utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Exception Type: ProgrammingError at /api/pitcher_stats/create/
Exception Value: function sum(boolean) does not exist
LINE 1: SELECT SUM(&quot;app_pitcherstat&quot;.&quot;win&quot;) AS &quot;total_wins&quot;, SUM(&quot;ap...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.

</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Variable</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;335&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;application/json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DB_HOST</td>
          <td class="code"><pre>&#x27;db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DB_NAME</td>
          <td class="code"><pre>&#x27;baseball_stats&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DB_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DB_PORT</td>
          <td class="code"><pre>&#x27;5432&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DB_USER</td>
          <td class="code"><pre>&#x27;postgres&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>&#x27;True&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;baseball_stats.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/root&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOSTNAME</td>
          <td class="code"><pre>&#x27;11a071c3dcea&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_CONNECTION</td>
          <td class="code"><pre>&#x27;keep-alive&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;127.0.0.1:8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.32.3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_CTYPE</td>
          <td class="code"><pre>&#x27;C.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/api/pitcher_stats/create/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYTHON_SHA256</td>
          <td class="code"><pre>&#x27;d984bcc57cd67caab26f7def42e523b1c015bbc5dc07836cf4f0b63fa159eb56&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYTHON_VERSION</td>
          <td class="code"><pre>&#x27;3.13.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;192.168.65.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;11a071c3dcea&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0xffffb4953520&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>baseball_stats.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Setting</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/app&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOWED_ORIGINS</td>
          <td class="code"><pre>[&#x27;http://localhost:5173&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;db&#x27;,
             &#x27;NAME&#x27;: &#x27;baseball_stats&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;postgres&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;app&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;django_filters&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian BokmÃ¥l&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;en-us&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>REST_FRAMEWORK</td>
          <td class="code"><pre>{&#x27;DEFAULT_FILTER_BACKENDS&#x27;: (&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;,)}</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;baseball_stats.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRAPER_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;baseball_stats.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;baseball_stats.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>
</main>


  <footer id="explanation">
    <p>
      Youâ€™re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </footer>

</body>
</html>

